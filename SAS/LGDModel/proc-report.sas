%MACRO ESTIMATION_OUTPUT(ESTIMATION /* ESTIMATION=0 & VALIDATION=1 */, 
                                 POPULATION /* GOOD OR BAD */, 
                                 INPUT_DATA /* INPUT DATASET WITH PROBABILITIES */);

* Example: %ESTIMATION_OUTPUT(0, 'BAD', BAD_BOOK_DEV_SCORES);

* Step 1 - Formatting used to order the final table output;
PROC FORMAT;
     INVALUE PARM
     "CURE"=1
     "LOSS"=2
     "SUS"=3
     "UNSUS"=4;
RUN;

/* Step 2 - Generate the report title */
%IF &ESTIMATION = 0 AND &POPULATION = 'BAD' %THEN %LET SAMPLE = BAD BOOK ESTIMATION SAMPLE;
%IF &ESTIMATION = 1 AND &POPULATION = 'BAD' %THEN %LET SAMPLE = BAD BOOK VALIDATION SAMPLE;
%IF &ESTIMATION = 0 AND &POPULATION = 'GOOD' %THEN %LET SAMPLE = GOOD BOOK ESTIMATION SAMPLE;
%IF &ESTIMATION = 1 AND &POPULATION = 'GOOD' %THEN %LET SAMPLE = GOOD BOOK VALIDATION SAMPLE;

* Step 3 - Bring in the input dataset;
data EXPOSURE_DATA;
set &INPUT_DATA;
run;

* Step 4 - Generate the output for the exposure weighted probabilities;
data EXPOSURE_DATA;
set EXPOSURE_DATA;
/* Exposure weighted by predicted probabilities */
prob_cure_exposure = predicted_prob_cure*current_balance;
prob_loss_exposure = predicted_prob_loss*current_balance;
prob_sus_exposure = predicted_prob_sus*current_balance;
prob_unsus_exposure = predicted_prob_unsus*current_balance;
run;

* Step 5 - Generate the Output report by - Estimation and Outcome;
proc report data=EXPOSURE_DATA;
TITLE1 "EXPOSURE - WEIGHTED PROBABILITIES BY OUTCOME";
TITLE2 "&SAMPLE";
COLUMNS OC_OUTCOME_HIERARCHY_GRP CURRENT_BALANCE=CBN PERCNT
CURRENT_BALANCE PERSUM PROB_CURE_EXPOSURE prob_loss_exposure
prob_sus_exposure prob_unsus_exposure 
(CURE_EXP_WGHT LOSS_EXP_WGHT SUS_EXP_WGHT UNSUS_EXP_WGHT);
DEFINE OC_OUTCOME_HIERARCHY_GRP  / GROUP FORMAT=$PARM. 'OUTCOME';
DEFINE CBN / ANALYSIS FORMAT=COMMA13. N 'VOLUME';
DEFINE PERCNT / COMPUTED FORMAT=PERCENT8.1 '% BY VOL.';
DEFINE CURRENT_BALANCE / ANALYSIS SUM FORMAT=COMMA13. 'VALUE';
DEFINE PERSUM / '% OF VAL.' FORMAT=PERCENT8.1;
DEFINE PROB_CURE_EXPOSURE / ANALYSIS SUM NOPRINT;
DEFINE PROB_LOSS_EXPOSURE / ANALYSIS SUM NOPRINT;
DEFINE PROB_SUS_EXPOSURE / ANALYSIS SUM NOPRINT;
DEFINE PROB_UNSUS_EXPOSURE / ANALYSIS SUM NOPRINT;
DEFINE CURE_EXP_WGHT / COMPUTED FORMAT=PERCENT8.1 'CURED';
DEFINE LOSS_EXP_WGHT / COMPUTED FORMAT=PERCENT8.1 'LOSS';
DEFINE SUS_EXP_WGHT / COMPUTED FORMAT=PERCENT8.1 'SUST';
DEFINE UNSUS_EXP_WGHT / COMPUTED FORMAT=PERCENT8.1 'UNSUST';
COMPUTE BEFORE;
TOTCOUNT = CBN;
TOTSUM = CURRENT_BALANCE.SUM;
ENDCOMP;
COMPUTE PERCNT;
PERCNT = CBN/TOTCOUNT;
ENDCOMP;
COMPUTE PERSUM;
PERSUM = CURRENT_BALANCE.SUM/TOTSUM;
ENDCOMP;
COMPUTE CURE_EXP_WGHT;
CURE_EXP_WGHT = PROB_CURE_EXPOSURE.SUM / CURRENT_BALANCE.SUM;
ENDCOMP;
COMPUTE LOSS_EXP_WGHT;
LOSS_EXP_WGHT = prob_loss_exposure.SUM / CURRENT_BALANCE.SUM;
ENDCOMP;
COMPUTE SUS_EXP_WGHT;
SUS_EXP_WGHT = prob_sus_exposure.SUM / CURRENT_BALANCE.SUM;
ENDCOMP;
COMPUTE UNSUS_EXP_WGHT;
UNSUS_EXP_WGHT = prob_unsus_exposure.SUM / CURRENT_BALANCE.SUM;
ENDCOMP;

RBREAK AFTER / SUMMARIZE UL OL ;
RUN;

%MEND;

/* Report on the scored up dataset */
proc report data=BAD_POP_EXP_DEC15;
TITLE1 "EXPOSURE - WEIGHTED PROBABILITIES BY OUTCOME";
TITLE2 "&SAMPLE";
COLUMNS N CURRENT_BALANCE PROB_CURE_EXPOSURE prob_loss_exposure
prob_sus_exposure prob_unsus_exposure 
(CURE_EXP_WGHT LOSS_EXP_WGHT SUS_EXP_WGHT UNSUS_EXP_WGHT);
DEFINE CURRENT_BALANCE / ANALYSIS SUM FORMAT=COMMA13. 'BALANCE';
DEFINE PROB_CURE_EXPOSURE / ANALYSIS SUM NOPRINT;
DEFINE PROB_LOSS_EXPOSURE / ANALYSIS SUM NOPRINT;
DEFINE PROB_SUS_EXPOSURE / ANALYSIS SUM NOPRINT;
DEFINE PROB_UNSUS_EXPOSURE / ANALYSIS SUM NOPRINT;
DEFINE CURE_EXP_WGHT / COMPUTED FORMAT=PERCENT8.1 'CURE';
DEFINE LOSS_EXP_WGHT / COMPUTED FORMAT=PERCENT8.1 'LOSS';
DEFINE SUS_EXP_WGHT / COMPUTED FORMAT=PERCENT8.1 'SUST';
DEFINE UNSUS_EXP_WGHT / COMPUTED FORMAT=PERCENT8.1 'UNSUST';
COMPUTE CURE_EXP_WGHT;
CURE_EXP_WGHT = PROB_CURE_EXPOSURE.SUM / CURRENT_BALANCE.SUM;
ENDCOMP;
COMPUTE LOSS_EXP_WGHT;
LOSS_EXP_WGHT = prob_loss_exposure.SUM / CURRENT_BALANCE.SUM;
ENDCOMP;
COMPUTE SUS_EXP_WGHT;
SUS_EXP_WGHT = prob_sus_exposure.SUM / CURRENT_BALANCE.SUM;
ENDCOMP;
COMPUTE UNSUS_EXP_WGHT;
UNSUS_EXP_WGHT = prob_unsus_exposure.SUM / CURRENT_BALANCE.SUM;
ENDCOMP;

/*RBREAK AFTER / SUMMARIZE UL OL;*/
RUN;
